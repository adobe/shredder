/*
 *  Copyright 2018 Adobe Systems Incorporated. All rights reserved.
 *  This file is licensed to you under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License. You may obtain a copy
 *  of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under
 *  the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 *  OF ANY KIND, either express or implied. See the License for the specific language
 *  governing permissions and limitations under the License.
 */

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.netflix.nebula:gradle-ospackage-plugin:8.4.1"
    classpath 'com.github.jengelman.gradle.plugins:shadow:6.0.0'
  }
}

apply plugin: 'application'
apply plugin: 'nebula.ospackage'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'com.adobe.aam.shredder.ec2.Main'

dependencies {
    compile project(':shredder-core-guice')
    compile group: 'com.amazonaws', name: 'aws-java-sdk-cloudwatch', version: '1.11.389'
}

// Used by shadow jar
jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': mainClassName
        )
    }
}

ospackage {
    license "Adobe Audience Manager"
    vendor "Adobe Audience Manager"
    url "http://www.adobe.com/products/audiencemanager.html"
    archStr "noarch"

    packageName "aam-${project.name}"
    release "${new Date().format('yyyyMMddHHmmss')}"
    version "${project.ext.VERSION_NAME}"
    os "LINUX"

    packageDescription "Adobe Audience Manager - ${project.name}"

    requires('java-service-wrapper')
    requires('java-1.8.0-openjdk')
    preInstall file('pkg_scripts/preInstall.sh')
    postInstall file('pkg_scripts/postInstall.sh')

    into "/usr/local/demdex/${project.name}/"

    from("build/libs/${project.name}-all.jar") {
        user "ddxapp"
        permissionGroup "ddx"
        into "lib"
        fileMode 0755
    }

    from("build/resources/main") {
        user "ddxapp"
        permissionGroup "ddx"
        into "config"
        fileMode 0644
    }

    from("build/resources/main/wrapper/ec2shredder") {
        user "ddxapp"
        permissionGroup "ddx"
        into "bin"
        fileMode 0655
    }

    link("/etc/init.d/${project.name}", "/usr/local/demdex/${project.name}/bin/ec2shredder")
    link("/etc/sysconfig/ec2shredder_wrapper.conf", "/usr/local/demdex/${project.name}/config/wrapper/ec2shredder_wrapper.conf")
    postInstall "install --mode=0755 --owner=ddxapp --group=ddx --directory /var/log/demdex/${project.name}"
    postInstall "install --mode=0755 --owner=ddxapp --group=ddx --directory /var/run/${project.name}"
}

buildRpm {
    dependsOn(shadowJar)
}

buildDeb {
    dependsOn(shadowJar)
}
